'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace wsSisanRegV2
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="RegistroExternoV2Soap", [Namespace]:="http://consar.gob.mx/")>  _
    Partial Public Class RegistroExternoV2
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private RegistroExternoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdjuntarArchivoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegistroIncidenciasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SolicitarAutorizacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.SEPRIS.My.MySettings.Default.SEPRIS_wsSisanRegV2_RegistroExternoV2
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event RegistroExternoCompleted As RegistroExternoCompletedEventHandler
        
        '''<remarks/>
        Public Event AdjuntarArchivoCompleted As AdjuntarArchivoCompletedEventHandler
        
        '''<remarks/>
        Public Event RegistroIncidenciasCompleted As RegistroIncidenciasCompletedEventHandler
        
        '''<remarks/>
        Public Event SolicitarAutorizacionCompleted As SolicitarAutorizacionCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://consar.gob.mx/RegistroExterno", RequestNamespace:="http://consar.gob.mx/", ResponseNamespace:="http://consar.gob.mx/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RegistroExterno(ByVal t_folioReferencia As String, ByVal usuarioElaboro As String, ByVal t_sistema As String, ByVal iD_TipoEntidad As Integer, ByVal iD_Entidad As Integer, ByVal iD_SubEntidad As Integer, ByVal iD_Participante As Integer, ByVal iD_Clasificacion As Integer, ByVal t_numVisitaInspeccion As String, ByVal f_fechaInicioActoSup As Date, ByVal f_fechaFinActoSup As Date, ByVal t_OFICIO_NUMERO_SICOD As String, ByVal t_observaciones As String, ByVal usuarioAutorizo As String, ByVal num_orden_visita_sisvig As String) As WsResultado
            Dim results() As Object = Me.Invoke("RegistroExterno", New Object() {t_folioReferencia, usuarioElaboro, t_sistema, iD_TipoEntidad, iD_Entidad, iD_SubEntidad, iD_Participante, iD_Clasificacion, t_numVisitaInspeccion, f_fechaInicioActoSup, f_fechaFinActoSup, t_OFICIO_NUMERO_SICOD, t_observaciones, usuarioAutorizo, num_orden_visita_sisvig})
            Return CType(results(0),WsResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RegistroExternoAsync(ByVal t_folioReferencia As String, ByVal usuarioElaboro As String, ByVal t_sistema As String, ByVal iD_TipoEntidad As Integer, ByVal iD_Entidad As Integer, ByVal iD_SubEntidad As Integer, ByVal iD_Participante As Integer, ByVal iD_Clasificacion As Integer, ByVal t_numVisitaInspeccion As String, ByVal f_fechaInicioActoSup As Date, ByVal f_fechaFinActoSup As Date, ByVal t_OFICIO_NUMERO_SICOD As String, ByVal t_observaciones As String, ByVal usuarioAutorizo As String, ByVal num_orden_visita_sisvig As String)
            Me.RegistroExternoAsync(t_folioReferencia, usuarioElaboro, t_sistema, iD_TipoEntidad, iD_Entidad, iD_SubEntidad, iD_Participante, iD_Clasificacion, t_numVisitaInspeccion, f_fechaInicioActoSup, f_fechaFinActoSup, t_OFICIO_NUMERO_SICOD, t_observaciones, usuarioAutorizo, num_orden_visita_sisvig, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegistroExternoAsync( _
                    ByVal t_folioReferencia As String,  _
                    ByVal usuarioElaboro As String,  _
                    ByVal t_sistema As String,  _
                    ByVal iD_TipoEntidad As Integer,  _
                    ByVal iD_Entidad As Integer,  _
                    ByVal iD_SubEntidad As Integer,  _
                    ByVal iD_Participante As Integer,  _
                    ByVal iD_Clasificacion As Integer,  _
                    ByVal t_numVisitaInspeccion As String,  _
                    ByVal f_fechaInicioActoSup As Date,  _
                    ByVal f_fechaFinActoSup As Date,  _
                    ByVal t_OFICIO_NUMERO_SICOD As String,  _
                    ByVal t_observaciones As String,  _
                    ByVal usuarioAutorizo As String,  _
                    ByVal num_orden_visita_sisvig As String,  _
                    ByVal userState As Object)
            If (Me.RegistroExternoOperationCompleted Is Nothing) Then
                Me.RegistroExternoOperationCompleted = AddressOf Me.OnRegistroExternoOperationCompleted
            End If
            Me.InvokeAsync("RegistroExterno", New Object() {t_folioReferencia, usuarioElaboro, t_sistema, iD_TipoEntidad, iD_Entidad, iD_SubEntidad, iD_Participante, iD_Clasificacion, t_numVisitaInspeccion, f_fechaInicioActoSup, f_fechaFinActoSup, t_OFICIO_NUMERO_SICOD, t_observaciones, usuarioAutorizo, num_orden_visita_sisvig}, Me.RegistroExternoOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegistroExternoOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegistroExternoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegistroExternoCompleted(Me, New RegistroExternoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://consar.gob.mx/AdjuntarArchivo", RequestNamespace:="http://consar.gob.mx/", ResponseNamespace:="http://consar.gob.mx/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdjuntarArchivo(ByVal folio As Integer, ByVal nombreDocumento As String, ByVal usuarioAdjunto As String) As WsResultado
            Dim results() As Object = Me.Invoke("AdjuntarArchivo", New Object() {folio, nombreDocumento, usuarioAdjunto})
            Return CType(results(0),WsResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdjuntarArchivoAsync(ByVal folio As Integer, ByVal nombreDocumento As String, ByVal usuarioAdjunto As String)
            Me.AdjuntarArchivoAsync(folio, nombreDocumento, usuarioAdjunto, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdjuntarArchivoAsync(ByVal folio As Integer, ByVal nombreDocumento As String, ByVal usuarioAdjunto As String, ByVal userState As Object)
            If (Me.AdjuntarArchivoOperationCompleted Is Nothing) Then
                Me.AdjuntarArchivoOperationCompleted = AddressOf Me.OnAdjuntarArchivoOperationCompleted
            End If
            Me.InvokeAsync("AdjuntarArchivo", New Object() {folio, nombreDocumento, usuarioAdjunto}, Me.AdjuntarArchivoOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdjuntarArchivoOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdjuntarArchivoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdjuntarArchivoCompleted(Me, New AdjuntarArchivoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://consar.gob.mx/RegistroIncidencias", RequestNamespace:="http://consar.gob.mx/", ResponseNamespace:="http://consar.gob.mx/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RegistroIncidencias(ByVal i_id_C_Irregularidad As Integer, ByVal i_Id_Irregularidad As Integer, ByVal Fech_Iregularidad As Date, ByVal T_OBS As String) As WsResultado
            Dim results() As Object = Me.Invoke("RegistroIncidencias", New Object() {i_id_C_Irregularidad, i_Id_Irregularidad, Fech_Iregularidad, T_OBS})
            Return CType(results(0),WsResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RegistroIncidenciasAsync(ByVal i_id_C_Irregularidad As Integer, ByVal i_Id_Irregularidad As Integer, ByVal Fech_Iregularidad As Date, ByVal T_OBS As String)
            Me.RegistroIncidenciasAsync(i_id_C_Irregularidad, i_Id_Irregularidad, Fech_Iregularidad, T_OBS, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegistroIncidenciasAsync(ByVal i_id_C_Irregularidad As Integer, ByVal i_Id_Irregularidad As Integer, ByVal Fech_Iregularidad As Date, ByVal T_OBS As String, ByVal userState As Object)
            If (Me.RegistroIncidenciasOperationCompleted Is Nothing) Then
                Me.RegistroIncidenciasOperationCompleted = AddressOf Me.OnRegistroIncidenciasOperationCompleted
            End If
            Me.InvokeAsync("RegistroIncidencias", New Object() {i_id_C_Irregularidad, i_Id_Irregularidad, Fech_Iregularidad, T_OBS}, Me.RegistroIncidenciasOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegistroIncidenciasOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegistroIncidenciasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegistroIncidenciasCompleted(Me, New RegistroIncidenciasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://consar.gob.mx/SolicitarAutorizacion", RequestNamespace:="http://consar.gob.mx/", ResponseNamespace:="http://consar.gob.mx/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SolicitarAutorizacion(ByVal Id_Irregularidad As Integer, ByVal UsuarioReg As String) As WsResultado
            Dim results() As Object = Me.Invoke("SolicitarAutorizacion", New Object() {Id_Irregularidad, UsuarioReg})
            Return CType(results(0),WsResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SolicitarAutorizacionAsync(ByVal Id_Irregularidad As Integer, ByVal UsuarioReg As String)
            Me.SolicitarAutorizacionAsync(Id_Irregularidad, UsuarioReg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SolicitarAutorizacionAsync(ByVal Id_Irregularidad As Integer, ByVal UsuarioReg As String, ByVal userState As Object)
            If (Me.SolicitarAutorizacionOperationCompleted Is Nothing) Then
                Me.SolicitarAutorizacionOperationCompleted = AddressOf Me.OnSolicitarAutorizacionOperationCompleted
            End If
            Me.InvokeAsync("SolicitarAutorizacion", New Object() {Id_Irregularidad, UsuarioReg}, Me.SolicitarAutorizacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnSolicitarAutorizacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.SolicitarAutorizacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SolicitarAutorizacionCompleted(Me, New SolicitarAutorizacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://consar.gob.mx/")>  _
    Partial Public Class WsResultado
        
        Private folioField As String
        
        Private irregularidadField As Integer
        
        Private lstMensajesField() As String
        
        Private isErrorField As Boolean
        
        '''<remarks/>
        Public Property Folio() As String
            Get
                Return Me.folioField
            End Get
            Set
                Me.folioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Irregularidad() As Integer
            Get
                Return Me.irregularidadField
            End Get
            Set
                Me.irregularidadField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lstMensajes() As String()
            Get
                Return Me.lstMensajesField
            End Get
            Set
                Me.lstMensajesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isError() As Boolean
            Get
                Return Me.isErrorField
            End Get
            Set
                Me.isErrorField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub RegistroExternoCompletedEventHandler(ByVal sender As Object, ByVal e As RegistroExternoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RegistroExternoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WsResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WsResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub AdjuntarArchivoCompletedEventHandler(ByVal sender As Object, ByVal e As AdjuntarArchivoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdjuntarArchivoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WsResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WsResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub RegistroIncidenciasCompletedEventHandler(ByVal sender As Object, ByVal e As RegistroIncidenciasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RegistroIncidenciasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WsResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WsResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub SolicitarAutorizacionCompletedEventHandler(ByVal sender As Object, ByVal e As SolicitarAutorizacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SolicitarAutorizacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WsResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WsResultado)
            End Get
        End Property
    End Class
End Namespace
