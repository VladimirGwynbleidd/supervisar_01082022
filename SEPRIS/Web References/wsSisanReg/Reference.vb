'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace wsSisanReg
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="RegistroExternoSoap", [Namespace]:="http://consar.gob.mx/")>  _
    Partial Public Class RegistroExterno
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private CallRegistroExternoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdjuntarArchivoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private enviarSancionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCatalogoIrregularidadesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegistroIncidenciasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerIncidenciasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegistroReincidenciaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCatalogoIrregularidadesPorProcesoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCatalogoProcesosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.SEPRIS.My.MySettings.Default.SEPRIS_wsSisanReg_RegistroExterno
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event CallRegistroExternoCompleted As CallRegistroExternoCompletedEventHandler
        
        '''<remarks/>
        Public Event AdjuntarArchivoCompleted As AdjuntarArchivoCompletedEventHandler
        
        '''<remarks/>
        Public Event enviarSancionCompleted As enviarSancionCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCatalogoIrregularidadesCompleted As ObtenerCatalogoIrregularidadesCompletedEventHandler
        
        '''<remarks/>
        Public Event RegistroIncidenciasCompleted As RegistroIncidenciasCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerIncidenciasCompleted As ObtenerIncidenciasCompletedEventHandler
        
        '''<remarks/>
        Public Event RegistroReincidenciaCompleted As RegistroReincidenciaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCatalogoIrregularidadesPorProcesoCompleted As ObtenerCatalogoIrregularidadesPorProcesoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCatalogoProcesosCompleted As ObtenerCatalogoProcesosCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://consar.gob.mx/RegistroExterno", RequestElementName:="RegistroExterno", RequestNamespace:="http://consar.gob.mx/", ResponseElementName:="RegistroExternoResponse", ResponseNamespace:="http://consar.gob.mx/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CallRegistroExterno(ByVal t_folioReferencia As String, ByVal usuarioElaboro As String, ByVal t_sistema As String, ByVal iD_TipoEntidad As Integer, ByVal iD_Entidad As Integer, ByVal iD_SubEntidad As Integer, ByVal iD_Participante As Integer, ByVal iD_Clasificacion As Integer, ByVal t_numVisitaInspeccion As String, ByVal f_fechaInicioActoSup As Date, ByVal f_fechaFinActoSup As Date, ByVal t_OFICIO_NUMERO_SICOD As String, ByVal t_observaciones As String, ByVal usuarioAutorizo As String, ByVal num_orden_visita_sisvig As String) As <System.Xml.Serialization.XmlElementAttribute("RegistroExternoResult")> WsResultado
            Dim results() As Object = Me.Invoke("CallRegistroExterno", New Object() {t_folioReferencia, usuarioElaboro, t_sistema, iD_TipoEntidad, iD_Entidad, iD_SubEntidad, iD_Participante, iD_Clasificacion, t_numVisitaInspeccion, f_fechaInicioActoSup, f_fechaFinActoSup, t_OFICIO_NUMERO_SICOD, t_observaciones, usuarioAutorizo, num_orden_visita_sisvig})
            Return CType(results(0),WsResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CallRegistroExternoAsync(ByVal t_folioReferencia As String, ByVal usuarioElaboro As String, ByVal t_sistema As String, ByVal iD_TipoEntidad As Integer, ByVal iD_Entidad As Integer, ByVal iD_SubEntidad As Integer, ByVal iD_Participante As Integer, ByVal iD_Clasificacion As Integer, ByVal t_numVisitaInspeccion As String, ByVal f_fechaInicioActoSup As Date, ByVal f_fechaFinActoSup As Date, ByVal t_OFICIO_NUMERO_SICOD As String, ByVal t_observaciones As String, ByVal usuarioAutorizo As String, ByVal num_orden_visita_sisvig As String)
            Me.CallRegistroExternoAsync(t_folioReferencia, usuarioElaboro, t_sistema, iD_TipoEntidad, iD_Entidad, iD_SubEntidad, iD_Participante, iD_Clasificacion, t_numVisitaInspeccion, f_fechaInicioActoSup, f_fechaFinActoSup, t_OFICIO_NUMERO_SICOD, t_observaciones, usuarioAutorizo, num_orden_visita_sisvig, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CallRegistroExternoAsync( _
                    ByVal t_folioReferencia As String,  _
                    ByVal usuarioElaboro As String,  _
                    ByVal t_sistema As String,  _
                    ByVal iD_TipoEntidad As Integer,  _
                    ByVal iD_Entidad As Integer,  _
                    ByVal iD_SubEntidad As Integer,  _
                    ByVal iD_Participante As Integer,  _
                    ByVal iD_Clasificacion As Integer,  _
                    ByVal t_numVisitaInspeccion As String,  _
                    ByVal f_fechaInicioActoSup As Date,  _
                    ByVal f_fechaFinActoSup As Date,  _
                    ByVal t_OFICIO_NUMERO_SICOD As String,  _
                    ByVal t_observaciones As String,  _
                    ByVal usuarioAutorizo As String,  _
                    ByVal num_orden_visita_sisvig As String,  _
                    ByVal userState As Object)
            If (Me.CallRegistroExternoOperationCompleted Is Nothing) Then
                Me.CallRegistroExternoOperationCompleted = AddressOf Me.OnCallRegistroExternoOperationCompleted
            End If
            Me.InvokeAsync("CallRegistroExterno", New Object() {t_folioReferencia, usuarioElaboro, t_sistema, iD_TipoEntidad, iD_Entidad, iD_SubEntidad, iD_Participante, iD_Clasificacion, t_numVisitaInspeccion, f_fechaInicioActoSup, f_fechaFinActoSup, t_OFICIO_NUMERO_SICOD, t_observaciones, usuarioAutorizo, num_orden_visita_sisvig}, Me.CallRegistroExternoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCallRegistroExternoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CallRegistroExternoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CallRegistroExternoCompleted(Me, New CallRegistroExternoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://consar.gob.mx/AdjuntarArchivo", RequestNamespace:="http://consar.gob.mx/", ResponseNamespace:="http://consar.gob.mx/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdjuntarArchivo(ByVal folio As String, ByVal nombreDocumento As String, ByVal usuarioAdjunto As String) As WsResultado
            Dim results() As Object = Me.Invoke("AdjuntarArchivo", New Object() {folio, nombreDocumento, usuarioAdjunto})
            Return CType(results(0),WsResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdjuntarArchivoAsync(ByVal folio As String, ByVal nombreDocumento As String, ByVal usuarioAdjunto As String)
            Me.AdjuntarArchivoAsync(folio, nombreDocumento, usuarioAdjunto, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdjuntarArchivoAsync(ByVal folio As String, ByVal nombreDocumento As String, ByVal usuarioAdjunto As String, ByVal userState As Object)
            If (Me.AdjuntarArchivoOperationCompleted Is Nothing) Then
                Me.AdjuntarArchivoOperationCompleted = AddressOf Me.OnAdjuntarArchivoOperationCompleted
            End If
            Me.InvokeAsync("AdjuntarArchivo", New Object() {folio, nombreDocumento, usuarioAdjunto}, Me.AdjuntarArchivoOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdjuntarArchivoOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdjuntarArchivoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdjuntarArchivoCompleted(Me, New AdjuntarArchivoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://consar.gob.mx/enviarSancion", RequestNamespace:="http://consar.gob.mx/", ResponseNamespace:="http://consar.gob.mx/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function enviarSancion(ByVal folio As String, ByVal usuario As String, ByVal t_observaciones As String) As WsResultado
            Dim results() As Object = Me.Invoke("enviarSancion", New Object() {folio, usuario, t_observaciones})
            Return CType(results(0),WsResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub enviarSancionAsync(ByVal folio As String, ByVal usuario As String, ByVal t_observaciones As String)
            Me.enviarSancionAsync(folio, usuario, t_observaciones, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub enviarSancionAsync(ByVal folio As String, ByVal usuario As String, ByVal t_observaciones As String, ByVal userState As Object)
            If (Me.enviarSancionOperationCompleted Is Nothing) Then
                Me.enviarSancionOperationCompleted = AddressOf Me.OnenviarSancionOperationCompleted
            End If
            Me.InvokeAsync("enviarSancion", New Object() {folio, usuario, t_observaciones}, Me.enviarSancionOperationCompleted, userState)
        End Sub
        
        Private Sub OnenviarSancionOperationCompleted(ByVal arg As Object)
            If (Not (Me.enviarSancionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent enviarSancionCompleted(Me, New enviarSancionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://consar.gob.mx/ObtenerCatalogoIrregularidades", RequestNamespace:="http://consar.gob.mx/", ResponseNamespace:="http://consar.gob.mx/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCatalogoIrregularidades() As WsResultadoCatalogoIrregularidad
            Dim results() As Object = Me.Invoke("ObtenerCatalogoIrregularidades", New Object(-1) {})
            Return CType(results(0),WsResultadoCatalogoIrregularidad)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCatalogoIrregularidadesAsync()
            Me.ObtenerCatalogoIrregularidadesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCatalogoIrregularidadesAsync(ByVal userState As Object)
            If (Me.ObtenerCatalogoIrregularidadesOperationCompleted Is Nothing) Then
                Me.ObtenerCatalogoIrregularidadesOperationCompleted = AddressOf Me.OnObtenerCatalogoIrregularidadesOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCatalogoIrregularidades", New Object(-1) {}, Me.ObtenerCatalogoIrregularidadesOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCatalogoIrregularidadesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCatalogoIrregularidadesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCatalogoIrregularidadesCompleted(Me, New ObtenerCatalogoIrregularidadesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://consar.gob.mx/RegistroIncidencias", RequestNamespace:="http://consar.gob.mx/", ResponseNamespace:="http://consar.gob.mx/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RegistroIncidencias(ByVal I_ID_KEY As Integer, ByVal i_id_C_Irregularidad As Integer, ByVal i_Id_Irregularidad As Integer, ByVal Fech_Iregularidad As Date, ByVal T_OBS As String) As WsResultado
            Dim results() As Object = Me.Invoke("RegistroIncidencias", New Object() {I_ID_KEY, i_id_C_Irregularidad, i_Id_Irregularidad, Fech_Iregularidad, T_OBS})
            Return CType(results(0),WsResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RegistroIncidenciasAsync(ByVal I_ID_KEY As Integer, ByVal i_id_C_Irregularidad As Integer, ByVal i_Id_Irregularidad As Integer, ByVal Fech_Iregularidad As Date, ByVal T_OBS As String)
            Me.RegistroIncidenciasAsync(I_ID_KEY, i_id_C_Irregularidad, i_Id_Irregularidad, Fech_Iregularidad, T_OBS, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegistroIncidenciasAsync(ByVal I_ID_KEY As Integer, ByVal i_id_C_Irregularidad As Integer, ByVal i_Id_Irregularidad As Integer, ByVal Fech_Iregularidad As Date, ByVal T_OBS As String, ByVal userState As Object)
            If (Me.RegistroIncidenciasOperationCompleted Is Nothing) Then
                Me.RegistroIncidenciasOperationCompleted = AddressOf Me.OnRegistroIncidenciasOperationCompleted
            End If
            Me.InvokeAsync("RegistroIncidencias", New Object() {I_ID_KEY, i_id_C_Irregularidad, i_Id_Irregularidad, Fech_Iregularidad, T_OBS}, Me.RegistroIncidenciasOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegistroIncidenciasOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegistroIncidenciasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegistroIncidenciasCompleted(Me, New RegistroIncidenciasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://consar.gob.mx/ObtenerIncidencias", RequestNamespace:="http://consar.gob.mx/", ResponseNamespace:="http://consar.gob.mx/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerIncidencias(ByVal id_Irregularidad As Integer, ByVal Filtro As Integer) As WsResultadoCatalogoIrregularidad
            Dim results() As Object = Me.Invoke("ObtenerIncidencias", New Object() {id_Irregularidad, Filtro})
            Return CType(results(0),WsResultadoCatalogoIrregularidad)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerIncidenciasAsync(ByVal id_Irregularidad As Integer, ByVal Filtro As Integer)
            Me.ObtenerIncidenciasAsync(id_Irregularidad, Filtro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerIncidenciasAsync(ByVal id_Irregularidad As Integer, ByVal Filtro As Integer, ByVal userState As Object)
            If (Me.ObtenerIncidenciasOperationCompleted Is Nothing) Then
                Me.ObtenerIncidenciasOperationCompleted = AddressOf Me.OnObtenerIncidenciasOperationCompleted
            End If
            Me.InvokeAsync("ObtenerIncidencias", New Object() {id_Irregularidad, Filtro}, Me.ObtenerIncidenciasOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerIncidenciasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerIncidenciasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerIncidenciasCompleted(Me, New ObtenerIncidenciasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://consar.gob.mx/RegistroReincidencia", RequestNamespace:="http://consar.gob.mx/", ResponseNamespace:="http://consar.gob.mx/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RegistroReincidencia(ByVal I_ID_INCIDENCIA As Integer, ByVal VIG_REINCIDENCIA As Boolean, ByVal T_OBS_NOREINCIDENCIA As String) As WsResultado
            Dim results() As Object = Me.Invoke("RegistroReincidencia", New Object() {I_ID_INCIDENCIA, VIG_REINCIDENCIA, T_OBS_NOREINCIDENCIA})
            Return CType(results(0),WsResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RegistroReincidenciaAsync(ByVal I_ID_INCIDENCIA As Integer, ByVal VIG_REINCIDENCIA As Boolean, ByVal T_OBS_NOREINCIDENCIA As String)
            Me.RegistroReincidenciaAsync(I_ID_INCIDENCIA, VIG_REINCIDENCIA, T_OBS_NOREINCIDENCIA, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegistroReincidenciaAsync(ByVal I_ID_INCIDENCIA As Integer, ByVal VIG_REINCIDENCIA As Boolean, ByVal T_OBS_NOREINCIDENCIA As String, ByVal userState As Object)
            If (Me.RegistroReincidenciaOperationCompleted Is Nothing) Then
                Me.RegistroReincidenciaOperationCompleted = AddressOf Me.OnRegistroReincidenciaOperationCompleted
            End If
            Me.InvokeAsync("RegistroReincidencia", New Object() {I_ID_INCIDENCIA, VIG_REINCIDENCIA, T_OBS_NOREINCIDENCIA}, Me.RegistroReincidenciaOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegistroReincidenciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegistroReincidenciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegistroReincidenciaCompleted(Me, New RegistroReincidenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://consar.gob.mx/ObtenerCatalogoIrregularidadesPorProceso", RequestNamespace:="http://consar.gob.mx/", ResponseNamespace:="http://consar.gob.mx/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCatalogoIrregularidadesPorProceso(ByVal idProceso As Integer) As WsResultadoCatalogoIrregularidad
            Dim results() As Object = Me.Invoke("ObtenerCatalogoIrregularidadesPorProceso", New Object() {idProceso})
            Return CType(results(0),WsResultadoCatalogoIrregularidad)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCatalogoIrregularidadesPorProcesoAsync(ByVal idProceso As Integer)
            Me.ObtenerCatalogoIrregularidadesPorProcesoAsync(idProceso, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCatalogoIrregularidadesPorProcesoAsync(ByVal idProceso As Integer, ByVal userState As Object)
            If (Me.ObtenerCatalogoIrregularidadesPorProcesoOperationCompleted Is Nothing) Then
                Me.ObtenerCatalogoIrregularidadesPorProcesoOperationCompleted = AddressOf Me.OnObtenerCatalogoIrregularidadesPorProcesoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCatalogoIrregularidadesPorProceso", New Object() {idProceso}, Me.ObtenerCatalogoIrregularidadesPorProcesoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCatalogoIrregularidadesPorProcesoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCatalogoIrregularidadesPorProcesoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCatalogoIrregularidadesPorProcesoCompleted(Me, New ObtenerCatalogoIrregularidadesPorProcesoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://consar.gob.mx/ObtenerCatalogoProcesos", RequestNamespace:="http://consar.gob.mx/", ResponseNamespace:="http://consar.gob.mx/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCatalogoProcesos() As WsResultadoCatalogoProceso
            Dim results() As Object = Me.Invoke("ObtenerCatalogoProcesos", New Object(-1) {})
            Return CType(results(0),WsResultadoCatalogoProceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCatalogoProcesosAsync()
            Me.ObtenerCatalogoProcesosAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCatalogoProcesosAsync(ByVal userState As Object)
            If (Me.ObtenerCatalogoProcesosOperationCompleted Is Nothing) Then
                Me.ObtenerCatalogoProcesosOperationCompleted = AddressOf Me.OnObtenerCatalogoProcesosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCatalogoProcesos", New Object(-1) {}, Me.ObtenerCatalogoProcesosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCatalogoProcesosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCatalogoProcesosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCatalogoProcesosCompleted(Me, New ObtenerCatalogoProcesosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://consar.gob.mx/")>  _
    Partial Public Class WsResultado
        
        Private folioField As String
        
        Private lstMensajesField() As String
        
        Private isErrorField As Boolean
        
        '''<remarks/>
        Public Property Folio() As String
            Get
                Return Me.folioField
            End Get
            Set
                Me.folioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lstMensajes() As String()
            Get
                Return Me.lstMensajesField
            End Get
            Set
                Me.lstMensajesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isError() As Boolean
            Get
                Return Me.isErrorField
            End Get
            Set
                Me.isErrorField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://consar.gob.mx/")>  _
    Partial Public Class WsResultadoCatalogoProceso
        
        Private catalogoField As System.Data.DataSet
        
        Private mensajeField As String
        
        Private isErrorField As Boolean
        
        '''<remarks/>
        Public Property Catalogo() As System.Data.DataSet
            Get
                Return Me.catalogoField
            End Get
            Set
                Me.catalogoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property mensaje() As String
            Get
                Return Me.mensajeField
            End Get
            Set
                Me.mensajeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isError() As Boolean
            Get
                Return Me.isErrorField
            End Get
            Set
                Me.isErrorField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://consar.gob.mx/")>  _
    Partial Public Class WsResultadoCatalogoIrregularidad
        
        Private catalogoField As System.Data.DataSet
        
        Private mensajeField As String
        
        Private isErrorField As Boolean
        
        '''<remarks/>
        Public Property Catalogo() As System.Data.DataSet
            Get
                Return Me.catalogoField
            End Get
            Set
                Me.catalogoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property mensaje() As String
            Get
                Return Me.mensajeField
            End Get
            Set
                Me.mensajeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isError() As Boolean
            Get
                Return Me.isErrorField
            End Get
            Set
                Me.isErrorField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CallRegistroExternoCompletedEventHandler(ByVal sender As Object, ByVal e As CallRegistroExternoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CallRegistroExternoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WsResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WsResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub AdjuntarArchivoCompletedEventHandler(ByVal sender As Object, ByVal e As AdjuntarArchivoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdjuntarArchivoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WsResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WsResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub enviarSancionCompletedEventHandler(ByVal sender As Object, ByVal e As enviarSancionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class enviarSancionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WsResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WsResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ObtenerCatalogoIrregularidadesCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCatalogoIrregularidadesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCatalogoIrregularidadesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WsResultadoCatalogoIrregularidad
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WsResultadoCatalogoIrregularidad)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub RegistroIncidenciasCompletedEventHandler(ByVal sender As Object, ByVal e As RegistroIncidenciasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RegistroIncidenciasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WsResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WsResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ObtenerIncidenciasCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerIncidenciasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerIncidenciasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WsResultadoCatalogoIrregularidad
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WsResultadoCatalogoIrregularidad)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub RegistroReincidenciaCompletedEventHandler(ByVal sender As Object, ByVal e As RegistroReincidenciaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RegistroReincidenciaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WsResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WsResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ObtenerCatalogoIrregularidadesPorProcesoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCatalogoIrregularidadesPorProcesoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCatalogoIrregularidadesPorProcesoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WsResultadoCatalogoIrregularidad
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WsResultadoCatalogoIrregularidad)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ObtenerCatalogoProcesosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCatalogoProcesosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCatalogoProcesosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WsResultadoCatalogoProceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WsResultadoCatalogoProceso)
            End Get
        End Property
    End Class
End Namespace
